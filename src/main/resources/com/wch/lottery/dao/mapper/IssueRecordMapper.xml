<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wch.lottery.dao.mapper.IssueRecordMapper">
  <resultMap id="BaseResultMap" type="com.wch.lottery.model.IssueRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="issue_no" jdbcType="INTEGER" property="issueNo" />
    <result column="num" jdbcType="TINYINT" property="num" />
    <result column="red" jdbcType="BOOLEAN" property="red" />
  </resultMap>
  <sql id="Base_Column_List">
    id, issue_no, num, red
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from issue_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByCondition" parameterType="com.wch.lottery.model.IssueRecord"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from issue_record
    <where>
      <if test="issueNo != null">
        and issue_no = #{issueNo,jdbcType=INTEGER}
      </if>
      <if test="num != null">
        and num = #{num,jdbcType=TINYINT}
      </if>
      <if test="red != null">
        and red = #{red,jdbcType=BOOLEAN}
      </if>
    </where>
  </select>
  <select id="selectNumByIssueNoAndCount" resultMap="BaseResultMap">
    select
    max(issue_no) issue_no,num
    from issue_record
    <where>
      <if test="issueNo != null">
        and issue_no >= #{issueNo,jdbcType=INTEGER}
      </if>
      <if test="red != null">
        and red = #{red,jdbcType=BOOLEAN}
      </if>
    </where>
    group by num
    having count(num)>=#{count,jdbcType=INTEGER}
  </select>
  <select id="selectNumByAreaCondition" parameterType="com.wch.lottery.model.dto.IssueRecordDTO" resultMap="BaseResultMap">
    select
    max(issue_no) issue_no,num
    from issue_record
    <where>
      <if test="beginIssueNo != null">
        and issue_no >= #{beginIssueNo,jdbcType=INTEGER}
      </if>
      <if test="endIssueNo != null">
        and issue_no <![CDATA[ <= ]]> #{endIssueNo,jdbcType=INTEGER}
      </if>
      <if test="red != null">
        and red = #{red,jdbcType=BOOLEAN}
      </if>
      <if test="num != null">
        and num = #{num,jdbcType=TINYINT}
      </if>
    </where>
    group by num
    <choose>
      <when test="minCount != null and maxCount != null">
        having
        count(num)>=#{minCount,jdbcType=INTEGER}
        and
        count(num)<![CDATA[ <= ]]> #{maxCount,jdbcType=INTEGER}
      </when>
      <otherwise>

        <if test="minCount != null">
          having count(num)>=#{minCount,jdbcType=INTEGER}
        </if>
        <if test="maxCount != null" >
          having count(num)<![CDATA[ <= ]]> #{maxCount,jdbcType=INTEGER}
        </if>
      </otherwise>
    </choose>
    order by issue_no
  </select>
  <select id="selectMaxMissRecord" resultMap="BaseResultMap">
    select max(issue_no) issue_no,num
    from issue_record
    <where>

      <if test="red != null">
        and red = #{red,jdbcType=BOOLEAN}
      </if>

    </where>
    group by num
    order by issue_no limit 1
  </select>
  <select id="selectByRange" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from issue_record
    <where>
      <if test="red != null">
        and red = #{red,jdbcType=BOOLEAN}
      </if>
      <if test="issueNo != null">
        and issue_no >= #{issueNo,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from issue_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wch.lottery.model.IssueRecord" useGeneratedKeys="true">
    insert into issue_record (issue_no, num, red
      )
    values (#{issueNo,jdbcType=INTEGER}, #{num,jdbcType=TINYINT}, #{red,jdbcType=BOOLEAN}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.wch.lottery.model.IssueRecord" useGeneratedKeys="true">
    insert into issue_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="issueNo != null">
        issue_no,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="red != null">
        red,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="issueNo != null">
        #{issueNo,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=TINYINT},
      </if>
      <if test="red != null">
        #{red,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" >
    insert into issue_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="issueNo != null">
        issue_no,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="red != null">
        red,
      </if>
    </trim>
    <trim prefix="values" suffixOverrides=",">
      <foreach collection="IssueRecordList" item="ir" separator=",">
      (
        <if test="issueNo != null">
          #{ir.issueNo,jdbcType=INTEGER},
        </if>
        <if test="num != null">
          #{ir.num,jdbcType=TINYINT},
        </if>
        <if test="red != null">
          #{ir.red,jdbcType=BOOLEAN},
        </if>
        )
      </foreach>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wch.lottery.model.IssueRecord">
    update issue_record
    <set>
      <if test="issueNo != null">
        issue_no = #{issueNo,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=TINYINT},
      </if>
      <if test="red != null">
        red = #{red,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wch.lottery.model.IssueRecord">
    update issue_record
    set issue_no = #{issueNo,jdbcType=INTEGER},
      num = #{num,jdbcType=TINYINT},
      red = #{red,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>